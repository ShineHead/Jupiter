// <auto-generated />
using System;
using Jupiter.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Jupiter.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200705174029_InitialPublish")]
    partial class InitialPublish
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Jupiter.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Action"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Horror"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Platformer"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Racing"
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryName = "RPG"
                        },
                        new
                        {
                            CategoryId = 6,
                            CategoryName = "Strategy"
                        },
                        new
                        {
                            CategoryId = 7,
                            CategoryName = "Survival"
                        });
                });

            modelBuilder.Entity("Jupiter.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("OrderPlaced")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OrderTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Jupiter.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TitleId")
                        .HasColumnType("int");

                    b.HasKey("OrderDetailId");

                    b.HasIndex("OrderId");

                    b.HasIndex("TitleId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("Jupiter.Models.ShoppingCartItem", b =>
                {
                    b.Property<int>("ShoppingCartItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("ShoppingCartId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TitleId")
                        .HasColumnType("int");

                    b.HasKey("ShoppingCartItemId");

                    b.HasIndex("TitleId");

                    b.ToTable("ShoppingCartItems");
                });

            modelBuilder.Entity("Jupiter.Models.Title", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Carousel1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Carousel2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Carousel3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GameCategory")
                        .HasColumnType("int");

                    b.Property<string>("ImageThumbnailUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Publisher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReleaseDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserRating")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("videosource")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Titles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Carousel1 = "/images/carousel/c_titanfall2/titanfall2_02.jpg",
                            Carousel2 = "/images/carousel/c_titanfall2/titanfall2_01.jpg",
                            Carousel3 = "/images/carousel/c_titanfall2/titanfall2_03.jpg",
                            CategoryId = 0,
                            Description = "Titanfall 2 is a first-person shooter video game, developed by Respawn Entertainment and published by Electronic Arts. A sequel to 2014's Titanfall, the game was released worldwide on October 28, 2016 for Windows, PlayStation 4, and Xbox One.",
                            GameCategory = 1,
                            ImageThumbnailUrl = "/images/titanfall2.jpg",
                            ImageUrl = "/images/titanfall2.jpg",
                            Name = "TitanFall 2",
                            Price = 25m,
                            Publisher = "Electronic Arts",
                            ReleaseDate = "2016",
                            UserRating = "5/5",
                            videosource = "https://www.youtube.com/embed/VqeMjHmL9eg"
                        },
                        new
                        {
                            Id = 2,
                            Carousel1 = "/images/carousel/c_masseffect2/masseffect2_01.jpg",
                            Carousel2 = "/images/carousel/c_masseffect2/masseffect2_02.jpg",
                            Carousel3 = "/images/carousel/c_masseffect2/masseffect2_03.jpg",
                            CategoryId = 0,
                            Description = "Mass Effect 2 is an action role-playing video game developed by BioWare and published by Electronic Arts. It was released for Microsoft Windows and Xbox 360 in 2010, and PlayStation 3 in 2011. Mass Effect 2 is the second installment of the Mass Effect series and a sequel to the original Mass Effect. ",
                            GameCategory = 1,
                            ImageThumbnailUrl = "/images/masseffect2.jpg",
                            ImageUrl = "/images/masseffect2.jpg",
                            Name = "Mass Effect 2",
                            Price = 10m,
                            Publisher = "Electronic Arts",
                            ReleaseDate = "2010",
                            UserRating = "5/5",
                            videosource = "https://www.youtube.com/embed/PHCA8tK117c"
                        },
                        new
                        {
                            Id = 3,
                            Carousel1 = "/images/carousel/c_alienisolation/alienisolation_01.jpg",
                            Carousel2 = "/images/carousel/c_alienisolation/alienisolation_02.jpg",
                            Carousel3 = "/images/carousel/c_alienisolation/alienisolation_03.jpg",
                            CategoryId = 0,
                            Description = "Alien: Isolation is a 2014 survival horror video game developed by Creative Assembly and published by Sega originally for Microsoft Windows, PlayStation 3, PlayStation 4, Xbox 360 and Xbox One.",
                            GameCategory = 2,
                            ImageThumbnailUrl = "/images/alienisolation.jpg",
                            ImageUrl = "/images/alienisolation.jpg",
                            Name = "Alien Isolation",
                            Price = 30m,
                            Publisher = "Sega",
                            ReleaseDate = "2014",
                            UserRating = "4/5",
                            videosource = "https://www.youtube.com/embed/7h0cgmvIrZw"
                        },
                        new
                        {
                            Id = 4,
                            Carousel1 = "/images/carousel/c_dirt3/dirt3_01.jpg",
                            Carousel2 = "/images/carousel/c_dirt3/dirt3_02.jpg",
                            Carousel3 = "/images/carousel/c_dirt3/dirt3_03.jpg",
                            CategoryId = 0,
                            Description = "Dirt 3 is a racing video game developed and published by Codemasters for Microsoft Windows, PlayStation 3 and Xbox 360. It is the eighth game in the Colin McRae Rally series.",
                            GameCategory = 4,
                            ImageThumbnailUrl = "/images/dirt3.jpg",
                            ImageUrl = "/images/dirt3.jpg",
                            Name = "Dirt 3",
                            Price = 20m,
                            Publisher = "Codemasters",
                            ReleaseDate = "2010",
                            UserRating = "3.5/5",
                            videosource = "https://www.youtube.com/embed/_MgSPOgcUyQ"
                        },
                        new
                        {
                            Id = 5,
                            Carousel1 = "/images/carousel/c_ori/ori_01.jpg",
                            Carousel2 = "/images/carousel/c_ori/ori_02.jpg",
                            Carousel3 = "/images/carousel/c_ori/ori_03.jpg",
                            CategoryId = 0,
                            Description = "Ori And The Blind Forest",
                            GameCategory = 3,
                            ImageThumbnailUrl = "/images/ori.jpg",
                            ImageUrl = "/images/ori.jpg",
                            Name = "Ori And The Blind Forest",
                            Price = 25m,
                            Publisher = "Microsoft Studios",
                            ReleaseDate = "2015",
                            UserRating = "4/5",
                            videosource = "https://www.youtube.com/embed/cklw-Yu3moE"
                        },
                        new
                        {
                            Id = 6,
                            Carousel1 = "/images/carousel/c_skyrim/skyrim_01.jpg",
                            Carousel2 = "/images/carousel/c_skyrim/skyrim_02.jpg",
                            Carousel3 = "/images/carousel/c_skyrim/skyrim_03.jpg",
                            CategoryId = 0,
                            Description = "Ori and the Blind Forest is a platform-adventure Metroidvania video game developed by Moon Studios and published by Microsoft Studios. The game was released for Xbox One and Microsoft Windows on March 11, 2015 and for Nintendo Switch on September 27, 2019.",
                            GameCategory = 5,
                            ImageThumbnailUrl = "/images/skyrim.jpg",
                            ImageUrl = "/images/skyrim.jpg",
                            Name = "Skyrim",
                            Price = 15m,
                            Publisher = "Bethesda",
                            ReleaseDate = "2011",
                            UserRating = "5/5",
                            videosource = "https://www.youtube.com/embed/JSRtYpNRoN0"
                        },
                        new
                        {
                            Id = 7,
                            Carousel1 = "/images/carousel/c_theforest/theforest_01.jpg",
                            Carousel2 = "/images/carousel/c_theforest/theforest_02.jpg",
                            Carousel3 = "/images/carousel/c_theforest/theforest_03.jpg",
                            CategoryId = 0,
                            Description = "The Forest is a survival video game developed and published by Endnight Games. The game takes place on a remote, heavily forested peninsula where the player character Eric Leblanc and his son Timmy are survivors of a plane crash.",
                            GameCategory = 7,
                            ImageThumbnailUrl = "/images/theforest.jpg",
                            ImageUrl = "/images/theforest.jpg",
                            Name = "The Forest",
                            Price = 15m,
                            Publisher = "Endnight Games",
                            ReleaseDate = "2017",
                            UserRating = "4/5",
                            videosource = "https://www.youtube.com/embed/7mwn5U2PNvk"
                        },
                        new
                        {
                            Id = 8,
                            Carousel1 = "/images/carousel/c_xcom/xcom_01.jpg",
                            Carousel2 = "/images/carousel/c_xcom/xcom_02.jpg",
                            Carousel3 = "/images/carousel/c_xcom/xcom_03.jpg",
                            CategoryId = 0,
                            Description = "XCOM: Enemy Unknown is a 2012 turn-based tactical video game developed by Firaxis Games and published by 2K Games. The game is a reimagined remake of the 1994 cult classic strategy game UFO: Enemy Unknown and a reboot of MicroProse's 1990s X-COM series.",
                            GameCategory = 6,
                            ImageThumbnailUrl = "/images/xcom.jpg",
                            ImageUrl = "/images/xcom.jpg",
                            Name = "XCOM: Enemy Unknown",
                            Price = 25m,
                            Publisher = "2K Games",
                            ReleaseDate = "2014",
                            UserRating = "5/5",
                            videosource = "https://www.youtube.com/embed/L2o2iW4mPR8"
                        },
                        new
                        {
                            Id = 9,
                            Carousel1 = "/images/carousel/c_doometernal/doometernal_01.jpg",
                            Carousel2 = "/images/carousel/c_doometernal/doometernal_02.jpg",
                            Carousel3 = "/images/carousel/c_doometernal/doometernal_03.jpg",
                            CategoryId = 0,
                            Description = "Doom Eternal is a first-person shooter video game developed by id Software and published by Bethesda Softworks. The sequel to Doom, and the fifth main game in the Doom series, it was released on March 20, 2020, for Windows, PlayStation 4, Stadia and Xbox One, with a Nintendo Switch version planned.",
                            GameCategory = 1,
                            ImageThumbnailUrl = "/images/doometernal.jpg",
                            ImageUrl = "/images/doometernal.jpg",
                            Name = "Doom Eternal",
                            Price = 40m,
                            Publisher = "ID Software",
                            ReleaseDate = "2019",
                            UserRating = "5/5",
                            videosource = "https://www.youtube.com/embed/_oVwrpfo_QA"
                        },
                        new
                        {
                            Id = 10,
                            Carousel1 = "/images/carousel/c_stellaris/stellaris_01.jpg",
                            Carousel2 = "/images/carousel/c_stellaris/stellaris_02.jpg",
                            Carousel3 = "/images/carousel/c_stellaris/stellaris_03.jpg",
                            CategoryId = 0,
                            Description = "Stellaris is a 4X grand strategy video game developed and published by Paradox Interactive. Stellaris's gameplay revolves around space exploration, managing an empire, diplomacy, and space warfare with other spacefaring civilizations.",
                            GameCategory = 1,
                            ImageThumbnailUrl = "/images/stellaris.jpg",
                            ImageUrl = "/images/stellaris.jpg",
                            Name = "Stellaris",
                            Price = 30m,
                            Publisher = "Paradox Interactive",
                            ReleaseDate = "2016",
                            UserRating = "5/5",
                            videosource = "https://www.youtube.com/embed/Zh9yZNrb62U"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Jupiter.Models.OrderDetail", b =>
                {
                    b.HasOne("Jupiter.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jupiter.Models.Title", "Title")
                        .WithMany()
                        .HasForeignKey("TitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jupiter.Models.ShoppingCartItem", b =>
                {
                    b.HasOne("Jupiter.Models.Title", "Title")
                        .WithMany()
                        .HasForeignKey("TitleId");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
